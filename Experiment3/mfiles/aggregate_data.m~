function aggregate_data()

filename = 'subj_order.txt';
folder = '/Volumes/Shruthi/CU/Research/Alaa_lab/foraging_data/pilot_naive/';

filename = fullfile(folder, filename);
csv_filename = fullfile(folder, 'table_R.csv');

subj_order = readtable(filename, 'Delimiter',' ',...
    'ReadVariableNames',0);
subj_order = table2cell(subj_order);
num_subj = size(subj_order,1);
num_trials = 200;    
num_env=2;
reqd_vars = {'pk_vel', 'movement_duration','travel_duration',...
        'max_distance','harvest_duration','patch_residence_duration',...
        'force_rate_max', 'force_per_berry'};
    
table_cols = {'Subj_id','Trial','Env','Order','Probe','pk_vel',...
    'movement_duration', 'travel_duration','max_distance',...
    'harvest_duration','patch_residence_duration', 'force_rate_max',...
    'force_per_berry'};

csv_arr = zeros(num_subj*num_env*num_trials,numel(table_cols));


for fn = 1:num_env
    
    data_all(fn) = cell2struct(repmat({nan(num_subj,num_trials)},length(...
        reqd_vars),1),reqd_vars);
    
    env_ix = strfind(table_cols, 'Env');
    env_ix = not(cellfun('isempty',env_ix));
    rows_ix_env = (fn-1) * num_trials*num_subj + (1:(num_subj*num_trials));
    csv_arr(rows_ix_env, env_ix) = zeros(length(rows_ix_env),1) + fn-1 ;
    
    for i = [cell2mat(subj_order(:,1))]'

        subj_name = subj_order{i,2};
        order = subj_order{i,3};
        load(fullfile(folder, 'matfiles_data',subj_name,...
            'data_subj.mat'));
        % Aggregate peak velocity
        
        subj_id_ix =  strfind(table_cols,'Subj_id');
        subj_id_ix = not(cellfun('isempty',subj_id_ix));
        rows_ix_subj = (fn-1) * num_trials*num_subj + (i-1)*num_trials + ...
            (1:num_trials);
        csv_arr(rows_ix_subj, subj_id_ix) = zeros(length(rows_ix_subj),1)...
            + i ;
        
        trial_ix = strfind(table_cols, 'Trial');
        trial_ix = not(cellfun('isempty',trial_ix));
        csv_arr(rows_ix_subj, trial_ix) = [1:num_trials]';
        
        order_ix = strfind(table_cols,'Order');
        order_ix = not(cellfun('isempty', order_ix));
        csv_arr(rows_ix_subj, order_ix) = zeros(length(rows_ix_subj),1)...
            + order ;
        
        probe_ix = strfind(table_cols, 'Probe');
        probe_ix = not(cellfun('isempty', probe_ix));
        probe_indices = data_subj{fn}.probe_trials;
        rows_ix_probe = (fn-1) * num_trials*num_subj + (i-1)*num_trials+...
            probe_indices; 
        csv_arr(rows_ix_probe, probe_ix) = ones(length(rows_ix_probe),1);
        
        for k = 1:numel(reqd_vars)
            tab_ix = strfind(table_cols,reqd_vars{k});
            tab_ix = not(cellfun('isempty',tab_ix));
            row_ix_add = (fn-1)*num_trials*num_subj + (i-1)*num_trials; 
            csv_arr(row_ix_add + (1:num_trials) ,tab_ix) = ...
                data_subj{fn}.(reqd_vars{k});
            data_all(fn).(reqd_vars{k})(i,:) = data_subj{fn}.(reqd_vars{k});
        end
    end
end

% Creating table in long format in case analysis needs to be done in R
table_R = array2table(csv_arr, 'VariableNames', table_cols);
writetable(table_R, csv_filename, 'WriteVariableNames',1);

% Correlation between travel duration and peak velocity
clrs = {'b','r'};
m=0;
if (1)
    for env = 1:2
        for m = 1:3
            figure(m);
            xx='Peak Velocity';
            x = data_all(env).pk_vel(:,2:200);
            x=x(:);
            if m== 1
                y = data_all(env).travel_duration(:,2:200);
                y=y(:);
                ind = ~isnan(x) & ~isnan(y);
                y=y(ind);
                yy= 'travel duration';
                
            elseif m==2
                y=  data_all(env).movement_duration(:,2:200);
                y=y(:);
                ind = ~isnan(x) & ~isnan(y);
                y=y(ind);
                yy='movement duration';
            else
                y=  data_all(env).harvest_duration(:,2:200);
                y=y(:);
                ind = ~isnan(x) & ~isnan(y);
                y=y(ind);
                yy='max distance';
            end
            
            x = x(ind);
            scatter(x,y, clrs{env});
            [coeffs,S] = polyfit(x', y', 1);
            fittedX = linspace(min(x), max(x), length(x));
            fittedY = polyval(coeffs, fittedX);
            r_squared = 1 - (S.normr/norm(y - mean(y)))^2;
            fprintf('\n R squared for %s correlated with %s : %d\n', yy, xx,...
                r_squared);
            % Plot the fitted line
            hold on;
            plot(fittedX, fittedY, 'r-', 'LineWidth', 3);
            ylabel(yy);
            xlabel(xx);
            title ('Correlation');
        end
    end
end

%plot the population means for different metrics
for env = 1:num_env
    k_ix = m+1;
    m_ix = 1; % subplot tile number

    for k = 1:numel(reqd_vars)
        figure(k_ix)
        subplot(2,2,m_ix)
        plot_dat = data_all(env).(reqd_vars{k});
        plot_mean = nanmean(plot_dat,1);
        
        plot_ster = nanstd(plot_dat,0,1)./sqrt(num_subj);
        if strcmp(reqd_vars{k},'travel_duration') || strcmp(reqd_vars{k},'max_distance')
           xdata=[2:num_trials];
           plot_mean=plot_mean(2:num_trials);
           plot_ster = plot_ster(2:num_trials);
        else
            xdata = [1:num_trials];
        end
        plotsdshading(xdata, plot_mean', plot_ster', clrs{env});
        title(reqd_vars{k});
        hold on;
        patch([probe_indices(1) probe_indices(1) probe_indices(end/4)...
            probe_indices(end/4)] ,[0.75*min(plot_mean) 1.25*max(plot_mean)...
            1.25*max(plot_mean) 0.75*min(plot_mean)] , 'r');
        alpha(0.2)
        patch([probe_indices(end/4+1) probe_indices(end/4+1) probe_indices(end/2)...
            probe_indices(end/2)] ,[0.75*min(plot_mean) 1.25*max(plot_mean)...
            1.25*max(plot_mean) 0.75*min(plot_mean)] , 'r');
        alpha(0.2)
        patch([probe_indices(end/2+1) probe_indices(end/2+1) probe_indices(end/4)+100 ...
            probe_indices(end/4)+100] ,[0.75*min(plot_mean) 1.25*max(plot_mean)...
            1.25*max(plot_mean) 0.75*min(plot_mean)] , 'r');
        alpha(0.2)
        patch([probe_indices(end/4+1)+100 probe_indices(end/4+1)+100 probe_indices(end) ...
            probe_indices(end)] ,[0.75*min(plot_mean) 1.25*max(plot_mean)...
            1.25*max(plot_mean) 0.75*min(plot_mean)] , 'r');
        alpha(0.2)
        m_ix = m_ix +1;
        
        if mod(m_ix, 4) == 1
            k_ix = k_ix + 1;
           m_ix = 1;
        end
        
    end
end

hold off
m = k_ix;
% Plot only probe trials metrics
for env = 1:num_env
    k_ix = m + 1;
    m_ix = 1;
    
    for k = 1:numel(reqd_vars)
        plot_dat = data_all(env).(reqd_vars{k});
        plot_dat = plot_dat(:,probe_indices);
        plot_mean = nanmean(plot_dat,1);
        figure(k_ix);
        subplot(2, 2, m_ix);
        plot_ster = nanstd(plot_dat, 0, 1)/sqrt(num_subj);
        xdata = [1:length(probe_indices)];
        plotsdshading(xdata, plot_mean', plot_ster', clrs{env});
        title(reqd_vars{k})
        hold on;

        m_ix = m_ix + 1;
        if mod(m_ix, 4) ==1 
            k_ix = k_ix + 1;
            m_ix = 1;
        end
        
    end
end
    